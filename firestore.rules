
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check for admin role
    function isAdmin() {
      // IMPORTANT: Replace with your actual Admin User ID
      return request.auth.uid == 'YOUR_ADMIN_UID_HERE';
    }

    match /serviceJobs/{jobId} {
      // Allow list (query) if the user is an admin OR is requesting their own data.
      // Allow get (single doc) if the user is an admin OR owns the document.
      allow read: if isAdmin() || (request.auth != null && request.auth.uid == resource.data.userId);

      // Allow create if the user is authenticated and the userId matches their own.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      
      // Allow update and delete only if the user owns the document.
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    match /mechanics/{mechanicId} {
       // Allow list (query) if the user is an admin OR is requesting their own data.
       // Allow get (single doc) if the user is an admin OR owns the document.
      allow read: if isAdmin() || (request.auth != null && request.auth.uid == resource.data.userId);
      
      // Allow create if the user is authenticated and the userId matches their own.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;

      // Allow update and delete only if the user owns the document.
      allow update, delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}

    